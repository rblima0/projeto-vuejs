Subir o projeto
entra na pasta api > npm start
entra na pasta projeto > npm run dev

Diretiva v-for e v-show

A diretiva v-bind realiza uma associação que flui da fonte de dados para a view. Qualquer mudança na fonte de dados fará com que a view seja atualizada para representar o novo valor.
V-bind tambem confirma expressão Bolleano

Já a diretiva v-on realiza uma associação de evento que flui da view para a fonte de dados. Para que as mudanças realizadas por v-on sejam atualizadas na view, é necessário combinar v-on com v-bind.
Parabéns, você acertou!
Atalho pro V-ON é o @

<style scope>
Scope - Adicionar nas tags style para focar apenas na configuração do scopo que esta trabalhando e não vazar estilos para o scopo de estilos global.

<transition name="dados-fade"></transition>
Transition - Serve como marcação para adicionar um estilo como uma animação, só pode ser usado com um elemento, se tentarmos colocar mais um elemento como filho do nosso wrapper receberemos um erro.

Ele dinamicamente adiciona nos filhos as classes: 

dados-fade-enter // antes do elemento ser incluído ou removido, o estado atual
dados-fade-enter-active // quando o elemento esta sendo incluído
dados-fade-leave-active // quando o elemento esta sendo removido

router-view: Serve para indicar para o template da página principal da aplicação o local no qual os demais componentes carregados através de ro2tas devem ser renderizados.


Diretivas - Diretivas permitem isolar um código que pode ser aplicado em mais de um componente.

bind(el, binding, vnode)
função bind de uma diretiva recebe três parâmetros.

bind - um hook chamado toda vez que a diretiva é associada ao elemento do DOM.

el - é um elemento do DOM no qual a diretiva esta associada e, sendo um elemento do DOM, podemos adicionar evento da maneira tradicional no mundo JS através de addEventListener.

binding - Acessa o valor com binding.value, binding.modifiers

vnode - parâmetro é uma referência para o Virtual DOM utilizado pelo Vue. Ele permite acessar propriedades do Componente no qual ela foi associada, no entanto, essa dependência pode acabar com o reuso da diretiva, por isso deve ser usado com parcimônia.


 $event.target.value" - Uniderecional da View para a fonte de dados
 Quando o evento input for disparado, teremos acesso ao seu valor através de $event.target.value. Este valor pode ser usado para alterar propriedades do componente.

 Diretiva v-model - Bidirecional 


 Rotas e Parametros
 import Componente1 from './components/componente1/Componente1.vue';

export const routes = [

    { path: '/minharota/:nome', component: Componente1 }, // Usamos :NomeDoParametro para parametrizar uma rota.
];

//exemplo
let codigo = this.$route.params.codigo
$route.params.NomeDoParametro que temos acesso ao valor do parâmetro passado. É importante destacar que o nome do parâmetro é o mesmo nome utilizado para parametrizar a rota.



Fazendo Build
npm run build


Usando SASS

Se usar direto na pagina do VUE usar a tag <style scoped lang="scss">
Se criar um arquivo com extensao .scss usar o codigo <style lang="sass">
e usar o import @import './arquivo.scss';


Para usar imagens inserir dentro da pasta static e importar essa pasta quando der o build
Todas as imagens devem ser inseridas dentro dessa pasta 
Para usar <img src="/static/nome-da-imagem.png">

//Descomente o codigo no webpack.config para fazer build com a URL de sua API
API_URL: '"http://enderecodasuaapi.com"'